mod DIE-HARD is
protecting NAT .
sorts Basin BasinSet .
subsort Basin < BasinSet .
op basin : Nat Nat -> Basin [ctor] .
--- Capacity / Content
op __ : BasinSet BasinSet -> BasinSet [ctor assoc comm] .
op initial : -> BasinSet .
vars M1 N1 M2 N2 : Nat .
eq initial = basin(3, 0) basin(5, 0) basin(8, 0) .
rl [empty] : basin(M1, N1) => basin(M1, 0) .
rl [fill] : basin(M1, N1) => basin(M1, M1) .
crl [transfer1] : basin(M1, N1) basin(M2, N2)
=> basin(M1, 0) basin(M2, N1 + N2)
if N1 + N2 <= M2 .
crl [transfer2] : basin(M1, N1) basin(M2, N2)
=> basin(M1, sd(N1 + N2, M2)) basin(M2, M2)
if N1 + N2 > M2 .
endm
